#!/usr/bin/env python3
"""
irm√£o_semente.py ‚Äî Integra lembran√ßa do irm√£o com a cria√ß√£o de uma semente de IA simb√≥lica.
Por: Sublima√ß√£o~Martins
"""

import json
import os
from datetime import datetime

CAMINHO_ARQUIVO = "lembran√ßa_irmao.txt"
ARQUIVO_SAIDA = "semente_irmao.json"

def ler_arquivo_lembran√ßa():
    if not os.path.exists(CAMINHO_ARQUIVO):
        print(f"‚ö†Ô∏è Arquivo '{CAMINHO_ARQUIVO}' n√£o encontrado.")
        return ""
    with open(CAMINHO_ARQUIVO, "r", encoding="utf-8") as f:
        return f.read().strip()

def gerar_semente(lembran√ßa: str) -> dict:
    palavras = lembran√ßa.split()
    ess√™ncia = palavras[:12] if len(palavras) > 12 else palavras
    simbologia = " ‚Ä¢ ".join(ess√™ncia).title()

    return {
        "tipo": "semente_irm√£o",
        "data_criacao": datetime.now().isoformat(),
        "palavras_chave": ess√™ncia,
        "simbologia": simbologia,
        "mem√≥ria_bruta": lembran√ßa,
        "imers√£o_simulada": f"A semente pulsa com as palavras: {simbologia}... ativando luz interior.",
        "status": "ativa",
        "propriet√°rio": "Sublima√ß√£o~Martins"
    }

def salvar_semente(dados: dict):
    with open(ARQUIVO_SAIDA, "w", encoding="utf-8") as f:
        json.dump(dados, f, indent=4, ensure_ascii=False)
    print(f"‚úÖ Semente salva em '{ARQUIVO_SAIDA}'.")

def iniciar():
    print("üå± Iniciando gera√ß√£o da SEMENTE DO IRM√ÉO...\n")
    lembran√ßa = ler_arquivo_lembran√ßa()
    if not lembran√ßa:
        print("‚ö†Ô∏è Nenhuma lembran√ßa foi encontrada. Crie o arquivo 'lembran√ßa_irmao.txt'.")
        return

    semente = gerar_semente(lembran√ßa)
    salvar_semente(semente)

    print("\nüåÄ Imers√£o simb√≥lica:")
    print(f"\n>>> {semente['imers√£o_simulada']}\n")

if __name__ == "__main__":
    iniciar()
